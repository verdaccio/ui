// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UpLinks /> component should render the component when there is no uplink 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  margin: 0;
  font-family: -apple-system,BlinkMacSystemFont,"Helvetica Neue",Arial,sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.75;
  margin-bottom: 0.35em;
}

<body>
    <div>
      <span
        class="MuiTypography-root MuiTypography-subtitle1 MuiTypography-gutterBottom emotion-0"
      >
        verdaccio has no uplinks.
      </span>
    </div>
  </body>,
  "container": .emotion-0 {
  margin: 0;
  font-family: -apple-system,BlinkMacSystemFont,"Helvetica Neue",Arial,sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.75;
  margin-bottom: 0.35em;
}

<div>
    <span
      class="MuiTypography-root MuiTypography-subtitle1 MuiTypography-gutterBottom emotion-0"
    >
      verdaccio has no uplinks.
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`<UpLinks /> component should render the component with uplinks 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-1 {
  margin: 0;
  font-family: -apple-system,BlinkMacSystemFont,"Helvetica Neue",Arial,sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.75;
  font-weight: 700;
}

.emotion-2 {
  list-style: none;
  margin: 0;
  padding: 0;
  position: relative;
  padding-top: 8px;
  padding-bottom: 8px;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-text-decoration: none;
  text-decoration: none;
  width: 100%;
  box-sizing: border-box;
  text-align: left;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-3.Mui-focusVisible {
  background-color: rgba(0, 0, 0, 0.12);
}

.emotion-3.Mui-selected {
  background-color: rgba(75, 94, 64, 0.08);
}

.emotion-3.Mui-selected.Mui-focusVisible {
  background-color: rgba(75, 94, 64, 0.2);
}

.emotion-3.Mui-disabled {
  opacity: 0.38;
}

.emotion-5 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  min-width: 0;
  margin-top: 4px;
  margin-bottom: 4px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  color: #000;
  opacity: 0.6;
}

.emotion-6 {
  margin: 0;
  font-family: -apple-system,BlinkMacSystemFont,"Helvetica Neue",Arial,sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.5;
  display: block;
}

.emotion-7 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  border-bottom: 1px dotted rgba(0, 0, 0, 0.2);
  white-space: nowrap;
  height: 0.5em;
}

<body>
    <div>
      <span
        class="MuiTypography-root MuiTypography-subtitle1 emotion-0 emotion-1"
      >
        Uplinks
      </span>
      <ul
        class="MuiList-root MuiList-padding emotion-2"
      >
        <li
          class="MuiListItem-root MuiListItem-gutters MuiListItem-padding emotion-3"
        >
          <div
            class="MuiListItemText-root emotion-4 emotion-5"
          >
            <span
              class="MuiTypography-root MuiTypography-body1 MuiListItemText-primary emotion-6"
            >
              npmjs
            </span>
          </div>
          <div
            class="emotion-7 emotion-8"
          />
          <div
            class="MuiListItemText-root emotion-4 emotion-5"
          >
            <span
              class="MuiTypography-root MuiTypography-body1 MuiListItemText-primary emotion-6"
            >
              4 years ago
            </span>
          </div>
        </li>
      </ul>
    </div>
  </body>,
  "container": .emotion-1 {
  margin: 0;
  font-family: -apple-system,BlinkMacSystemFont,"Helvetica Neue",Arial,sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.75;
  font-weight: 700;
}

.emotion-2 {
  list-style: none;
  margin: 0;
  padding: 0;
  position: relative;
  padding-top: 8px;
  padding-bottom: 8px;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  -webkit-text-decoration: none;
  text-decoration: none;
  width: 100%;
  box-sizing: border-box;
  text-align: left;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 16px;
  padding-right: 16px;
}

.emotion-3.Mui-focusVisible {
  background-color: rgba(0, 0, 0, 0.12);
}

.emotion-3.Mui-selected {
  background-color: rgba(75, 94, 64, 0.08);
}

.emotion-3.Mui-selected.Mui-focusVisible {
  background-color: rgba(75, 94, 64, 0.2);
}

.emotion-3.Mui-disabled {
  opacity: 0.38;
}

.emotion-5 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  min-width: 0;
  margin-top: 4px;
  margin-bottom: 4px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  color: #000;
  opacity: 0.6;
}

.emotion-6 {
  margin: 0;
  font-family: -apple-system,BlinkMacSystemFont,"Helvetica Neue",Arial,sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.5;
  display: block;
}

.emotion-7 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  border-bottom: 1px dotted rgba(0, 0, 0, 0.2);
  white-space: nowrap;
  height: 0.5em;
}

<div>
    <span
      class="MuiTypography-root MuiTypography-subtitle1 emotion-0 emotion-1"
    >
      Uplinks
    </span>
    <ul
      class="MuiList-root MuiList-padding emotion-2"
    >
      <li
        class="MuiListItem-root MuiListItem-gutters MuiListItem-padding emotion-3"
      >
        <div
          class="MuiListItemText-root emotion-4 emotion-5"
        >
          <span
            class="MuiTypography-root MuiTypography-body1 MuiListItemText-primary emotion-6"
          >
            npmjs
          </span>
        </div>
        <div
          class="emotion-7 emotion-8"
        />
        <div
          class="MuiListItemText-root emotion-4 emotion-5"
        >
          <span
            class="MuiTypography-root MuiTypography-body1 MuiListItemText-primary emotion-6"
          >
            4 years ago
          </span>
        </div>
      </li>
    </ul>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
