// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test Developers should render the component for contributors with items 1`] = `
<Developers
  type="contributors"
>
  <Styled(WithStyles(ForwardRef(Typography)))
    variant="subtitle1"
  >
    <WithStyles(ForwardRef(Typography))
      className="css-18tsvng emotion-0"
      variant="subtitle1"
    >
      <ForwardRef(Typography)
        className="css-18tsvng emotion-0"
        classes={
          Object {
            "alignCenter": "MuiTypography-alignCenter",
            "alignJustify": "MuiTypography-alignJustify",
            "alignLeft": "MuiTypography-alignLeft",
            "alignRight": "MuiTypography-alignRight",
            "body1": "MuiTypography-body1",
            "body2": "MuiTypography-body2",
            "button": "MuiTypography-button",
            "caption": "MuiTypography-caption",
            "colorError": "MuiTypography-colorError",
            "colorInherit": "MuiTypography-colorInherit",
            "colorPrimary": "MuiTypography-colorPrimary",
            "colorSecondary": "MuiTypography-colorSecondary",
            "colorTextPrimary": "MuiTypography-colorTextPrimary",
            "colorTextSecondary": "MuiTypography-colorTextSecondary",
            "displayBlock": "MuiTypography-displayBlock",
            "displayInline": "MuiTypography-displayInline",
            "gutterBottom": "MuiTypography-gutterBottom",
            "h1": "MuiTypography-h1",
            "h2": "MuiTypography-h2",
            "h3": "MuiTypography-h3",
            "h4": "MuiTypography-h4",
            "h5": "MuiTypography-h5",
            "h6": "MuiTypography-h6",
            "noWrap": "MuiTypography-noWrap",
            "overline": "MuiTypography-overline",
            "paragraph": "MuiTypography-paragraph",
            "root": "MuiTypography-root",
            "srOnly": "MuiTypography-srOnly",
            "subtitle1": "MuiTypography-subtitle1",
            "subtitle2": "MuiTypography-subtitle2",
          }
        }
        variant="subtitle1"
      >
        <h6
          className="MuiTypography-root css-18tsvng emotion-0 MuiTypography-subtitle1"
        >
          contributors
        </h6>
      </ForwardRef(Typography)>
    </WithStyles(ForwardRef(Typography))>
  </Styled(WithStyles(ForwardRef(Typography)))>
  <Styled(div)>
    <div
      className="css-mkcn9c emotion-5"
    >
      <Styled(span)
        key="dave.methvin@gmail.com"
      >
        <span
          className="css-dvxtzn emotion-3"
        >
          <AvatarTooltip
            email="dave.methvin@gmail.com"
            name="dmethvin"
            version="1.0.0"
          >
            <ForwardRef(ToolTip)
              title="dmethvin"
            >
              <WithStyles(ForwardRef(TextField))
                InputProps={
                  Object {
                    "classes": undefined,
                  }
                }
                innerRef={null}
                title="dmethvin"
              >
                <ForwardRef(TextField)
                  InputProps={
                    Object {
                      "classes": undefined,
                    }
                  }
                  classes={
                    Object {
                      "root": "MuiTextField-root",
                    }
                  }
                  title="dmethvin"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="MuiTextField-root"
                    required={false}
                    title="dmethvin"
                    variant="standard"
                  >
                    <ForwardRef(FormControl)
                      className="MuiTextField-root"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                      required={false}
                      title="dmethvin"
                      variant="standard"
                    >
                      <div
                        className="MuiFormControl-root MuiTextField-root"
                        title="dmethvin"
                      >
                        <WithStyles(ForwardRef(Input))>
                          <ForwardRef(Input)
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root",
                                "underline": "MuiInput-underline",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(InputBase))
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "formControl": "MuiInput-formControl",
                                  "fullWidth": "MuiInput-fullWidth",
                                  "input": "MuiInput-input",
                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                  "multiline": "MuiInput-multiline",
                                  "root": "MuiInput-root MuiInput-underline",
                                  "underline": null,
                                }
                              }
                              fullWidth={false}
                              inputComponent="input"
                              multiline={false}
                              type="text"
                            >
                              <ForwardRef(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "focused": "Mui-focused Mui-focused",
                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                    "input": "MuiInputBase-input MuiInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                    "inputSelect": "MuiInputBase-inputSelect",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                  }
                                }
                                fullWidth={false}
                                inputComponent="input"
                                multiline={false}
                                type="text"
                              >
                                <div
                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                  onClick={[Function]}
                                >
                                  <input
                                    aria-invalid={false}
                                    className="MuiInputBase-input MuiInput-input"
                                    disabled={false}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    type="text"
                                  />
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(Input)>
                        </WithStyles(ForwardRef(Input))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                </ForwardRef(TextField)>
              </WithStyles(ForwardRef(TextField))>
            </ForwardRef(ToolTip)>
          </AvatarTooltip>
        </span>
      </Styled(span)>
      <Styled(span)
        key="m.goleb@gmail.com"
      >
        <span
          className="css-dvxtzn emotion-3"
        >
          <AvatarTooltip
            email="m.goleb@gmail.com"
            name="mgol"
            version="1.0.0"
          >
            <ForwardRef(ToolTip)
              title="mgol"
            >
              <WithStyles(ForwardRef(TextField))
                InputProps={
                  Object {
                    "classes": undefined,
                  }
                }
                innerRef={null}
                title="mgol"
              >
                <ForwardRef(TextField)
                  InputProps={
                    Object {
                      "classes": undefined,
                    }
                  }
                  classes={
                    Object {
                      "root": "MuiTextField-root",
                    }
                  }
                  title="mgol"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="MuiTextField-root"
                    required={false}
                    title="mgol"
                    variant="standard"
                  >
                    <ForwardRef(FormControl)
                      className="MuiTextField-root"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                      required={false}
                      title="mgol"
                      variant="standard"
                    >
                      <div
                        className="MuiFormControl-root MuiTextField-root"
                        title="mgol"
                      >
                        <WithStyles(ForwardRef(Input))>
                          <ForwardRef(Input)
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root",
                                "underline": "MuiInput-underline",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(InputBase))
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "formControl": "MuiInput-formControl",
                                  "fullWidth": "MuiInput-fullWidth",
                                  "input": "MuiInput-input",
                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                  "multiline": "MuiInput-multiline",
                                  "root": "MuiInput-root MuiInput-underline",
                                  "underline": null,
                                }
                              }
                              fullWidth={false}
                              inputComponent="input"
                              multiline={false}
                              type="text"
                            >
                              <ForwardRef(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "focused": "Mui-focused Mui-focused",
                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                    "input": "MuiInputBase-input MuiInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                    "inputSelect": "MuiInputBase-inputSelect",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                  }
                                }
                                fullWidth={false}
                                inputComponent="input"
                                multiline={false}
                                type="text"
                              >
                                <div
                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                  onClick={[Function]}
                                >
                                  <input
                                    aria-invalid={false}
                                    className="MuiInputBase-input MuiInput-input"
                                    disabled={false}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    type="text"
                                  />
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(Input)>
                        </WithStyles(ForwardRef(Input))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                </ForwardRef(TextField)>
              </WithStyles(ForwardRef(TextField))>
            </ForwardRef(ToolTip)>
          </AvatarTooltip>
        </span>
      </Styled(span)>
    </div>
  </Styled(div)>
</Developers>
`;

exports[`test Developers should render the component for maintainers with items 1`] = `
<Developers
  type="maintainers"
>
  <Styled(WithStyles(ForwardRef(Typography)))
    variant="subtitle1"
  >
    <WithStyles(ForwardRef(Typography))
      className="css-18tsvng emotion-0"
      variant="subtitle1"
    >
      <ForwardRef(Typography)
        className="css-18tsvng emotion-0"
        classes={
          Object {
            "alignCenter": "MuiTypography-alignCenter",
            "alignJustify": "MuiTypography-alignJustify",
            "alignLeft": "MuiTypography-alignLeft",
            "alignRight": "MuiTypography-alignRight",
            "body1": "MuiTypography-body1",
            "body2": "MuiTypography-body2",
            "button": "MuiTypography-button",
            "caption": "MuiTypography-caption",
            "colorError": "MuiTypography-colorError",
            "colorInherit": "MuiTypography-colorInherit",
            "colorPrimary": "MuiTypography-colorPrimary",
            "colorSecondary": "MuiTypography-colorSecondary",
            "colorTextPrimary": "MuiTypography-colorTextPrimary",
            "colorTextSecondary": "MuiTypography-colorTextSecondary",
            "displayBlock": "MuiTypography-displayBlock",
            "displayInline": "MuiTypography-displayInline",
            "gutterBottom": "MuiTypography-gutterBottom",
            "h1": "MuiTypography-h1",
            "h2": "MuiTypography-h2",
            "h3": "MuiTypography-h3",
            "h4": "MuiTypography-h4",
            "h5": "MuiTypography-h5",
            "h6": "MuiTypography-h6",
            "noWrap": "MuiTypography-noWrap",
            "overline": "MuiTypography-overline",
            "paragraph": "MuiTypography-paragraph",
            "root": "MuiTypography-root",
            "srOnly": "MuiTypography-srOnly",
            "subtitle1": "MuiTypography-subtitle1",
            "subtitle2": "MuiTypography-subtitle2",
          }
        }
        variant="subtitle1"
      >
        <h6
          className="MuiTypography-root css-18tsvng emotion-0 MuiTypography-subtitle1"
        >
          maintainers
        </h6>
      </ForwardRef(Typography)>
    </WithStyles(ForwardRef(Typography))>
  </Styled(WithStyles(ForwardRef(Typography)))>
  <Styled(div)>
    <div
      className="css-mkcn9c emotion-5"
    >
      <Styled(span)
        key="dave.methvin@gmail.com"
      >
        <span
          className="css-dvxtzn emotion-3"
        >
          <AvatarTooltip
            email="dave.methvin@gmail.com"
            name="dmethvin"
            version="1.0.0"
          >
            <ForwardRef(ToolTip)
              title="dmethvin"
            >
              <WithStyles(ForwardRef(TextField))
                InputProps={
                  Object {
                    "classes": undefined,
                  }
                }
                innerRef={null}
                title="dmethvin"
              >
                <ForwardRef(TextField)
                  InputProps={
                    Object {
                      "classes": undefined,
                    }
                  }
                  classes={
                    Object {
                      "root": "MuiTextField-root",
                    }
                  }
                  title="dmethvin"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="MuiTextField-root"
                    required={false}
                    title="dmethvin"
                    variant="standard"
                  >
                    <ForwardRef(FormControl)
                      className="MuiTextField-root"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                      required={false}
                      title="dmethvin"
                      variant="standard"
                    >
                      <div
                        className="MuiFormControl-root MuiTextField-root"
                        title="dmethvin"
                      >
                        <WithStyles(ForwardRef(Input))>
                          <ForwardRef(Input)
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root",
                                "underline": "MuiInput-underline",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(InputBase))
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "formControl": "MuiInput-formControl",
                                  "fullWidth": "MuiInput-fullWidth",
                                  "input": "MuiInput-input",
                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                  "multiline": "MuiInput-multiline",
                                  "root": "MuiInput-root MuiInput-underline",
                                  "underline": null,
                                }
                              }
                              fullWidth={false}
                              inputComponent="input"
                              multiline={false}
                              type="text"
                            >
                              <ForwardRef(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "focused": "Mui-focused Mui-focused",
                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                    "input": "MuiInputBase-input MuiInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                    "inputSelect": "MuiInputBase-inputSelect",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                  }
                                }
                                fullWidth={false}
                                inputComponent="input"
                                multiline={false}
                                type="text"
                              >
                                <div
                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                  onClick={[Function]}
                                >
                                  <input
                                    aria-invalid={false}
                                    className="MuiInputBase-input MuiInput-input"
                                    disabled={false}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    type="text"
                                  />
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(Input)>
                        </WithStyles(ForwardRef(Input))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                </ForwardRef(TextField)>
              </WithStyles(ForwardRef(TextField))>
            </ForwardRef(ToolTip)>
          </AvatarTooltip>
        </span>
      </Styled(span)>
      <Styled(span)
        key="m.goleb@gmail.com"
      >
        <span
          className="css-dvxtzn emotion-3"
        >
          <AvatarTooltip
            email="m.goleb@gmail.com"
            name="mgol"
            version="1.0.0"
          >
            <ForwardRef(ToolTip)
              title="mgol"
            >
              <WithStyles(ForwardRef(TextField))
                InputProps={
                  Object {
                    "classes": undefined,
                  }
                }
                innerRef={null}
                title="mgol"
              >
                <ForwardRef(TextField)
                  InputProps={
                    Object {
                      "classes": undefined,
                    }
                  }
                  classes={
                    Object {
                      "root": "MuiTextField-root",
                    }
                  }
                  title="mgol"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="MuiTextField-root"
                    required={false}
                    title="mgol"
                    variant="standard"
                  >
                    <ForwardRef(FormControl)
                      className="MuiTextField-root"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                      required={false}
                      title="mgol"
                      variant="standard"
                    >
                      <div
                        className="MuiFormControl-root MuiTextField-root"
                        title="mgol"
                      >
                        <WithStyles(ForwardRef(Input))>
                          <ForwardRef(Input)
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root",
                                "underline": "MuiInput-underline",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(InputBase))
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "formControl": "MuiInput-formControl",
                                  "fullWidth": "MuiInput-fullWidth",
                                  "input": "MuiInput-input",
                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                  "multiline": "MuiInput-multiline",
                                  "root": "MuiInput-root MuiInput-underline",
                                  "underline": null,
                                }
                              }
                              fullWidth={false}
                              inputComponent="input"
                              multiline={false}
                              type="text"
                            >
                              <ForwardRef(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "focused": "Mui-focused Mui-focused",
                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                    "input": "MuiInputBase-input MuiInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                    "inputSelect": "MuiInputBase-inputSelect",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                    "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                  }
                                }
                                fullWidth={false}
                                inputComponent="input"
                                multiline={false}
                                type="text"
                              >
                                <div
                                  className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                  onClick={[Function]}
                                >
                                  <input
                                    aria-invalid={false}
                                    className="MuiInputBase-input MuiInput-input"
                                    disabled={false}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    type="text"
                                  />
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(Input)>
                        </WithStyles(ForwardRef(Input))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                </ForwardRef(TextField)>
              </WithStyles(ForwardRef(TextField))>
            </ForwardRef(ToolTip)>
          </AvatarTooltip>
        </span>
      </Styled(span)>
    </div>
  </Styled(div)>
</Developers>
`;

exports[`test Developers should render the component with no items 1`] = `
<Developers
  type="maintainers"
/>
`;
