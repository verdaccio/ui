// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UpLinks /> component should render the component when there is no uplink 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="MuiTypography-root MuiTypography-subtitle1 MuiTypography-gutterBottom"
      >
        verdaccio has no uplinks.
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="MuiTypography-root MuiTypography-subtitle1 MuiTypography-gutterBottom"
    >
      verdaccio has no uplinks.
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`<UpLinks /> component should render the component with uplinks 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  font-weight: 700;
}

.emotion-2 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  color: #000;
  opacity: 0.6;
}

.emotion-4 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  border-bottom: 1px dotted rgba(0,0,0,0.2);
  white-space: nowrap;
  height: 0.5em;
}

<body>
    <div>
      <span
        class="MuiTypography-root emotion-0 emotion-1 MuiTypography-subtitle1"
      >
        Uplinks
      </span>
      <ul
        class="MuiList-root MuiList-padding"
      >
        <li
          class="MuiListItem-root MuiListItem-gutters"
        >
          <div
            class="MuiListItemText-root emotion-2 emotion-3"
          >
            <span
              class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
            >
              npmjs
            </span>
          </div>
          <div
            class="emotion-4 emotion-5"
          />
          <div
            class="MuiListItemText-root emotion-2 emotion-3"
          >
            <span
              class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
            >
              3 years ago
            </span>
          </div>
        </li>
      </ul>
    </div>
  </body>,
  "container": .emotion-0 {
  font-weight: 700;
}

.emotion-2 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  color: #000;
  opacity: 0.6;
}

.emotion-4 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  border-bottom: 1px dotted rgba(0,0,0,0.2);
  white-space: nowrap;
  height: 0.5em;
}

<div>
    <span
      class="MuiTypography-root emotion-0 emotion-1 MuiTypography-subtitle1"
    >
      Uplinks
    </span>
    <ul
      class="MuiList-root MuiList-padding"
    >
      <li
        class="MuiListItem-root MuiListItem-gutters"
      >
        <div
          class="MuiListItemText-root emotion-2 emotion-3"
        >
          <span
            class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
          >
            npmjs
          </span>
        </div>
        <div
          class="emotion-4 emotion-5"
        />
        <div
          class="MuiListItemText-root emotion-2 emotion-3"
        >
          <span
            class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
          >
            3 years ago
          </span>
        </div>
      </li>
    </ul>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
